<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 各种各种 | RainySummer's New Blog]]></title>
  <link href="http://blog.xd547.com/blog/categories/ge-chong-ge-chong/atom.xml" rel="self"/>
  <link href="http://blog.xd547.com/"/>
  <updated>2014-10-18T21:25:31+08:00</updated>
  <id>http://blog.xd547.com/</id>
  <author>
    <name><![CDATA[RainySummer]]></name>
    <email><![CDATA[RainySummer@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[如何在Ubuntu 12.04 LTS 上安装L2TP Server]]></title>
    <link href="http://blog.xd547.com/blog/2014/06/19/how-to-install-l2tp-on-ubuntu-12-04/"/>
    <updated>2014-06-19T15:20:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2014/06/19/how-to-install-l2tp-on-ubuntu-12-04</id>
    <content type="html"><![CDATA[<h3>安装必要组件</h3>

<p><code>bash
sudo apt-get install xl2tpd openswan ppp
</code></p>

<h3>IPSec / Openswan</h3>

<ul>
<li>拷贝下面内容到 <code>/etc/ipsec.conf</code>，
并把其中的<code>x.x.x.x</code>替换为你服务器的ip
```
config setup
  nat_traversal=yes
  virtual_private=%v4:10.0.0.0/8,%v4:192.168.0.0/16,%v4:172.16.0.0/12,%v4:!10.152.2.0/24
  #contains the networks that are allowed as subnet= for the remote client. In other words, the address ranges that may live behind a NAT router through which a client connects.
  oe=off
  protostack=netkey</li>
</ul>


<p>conn L2TP-PSK-NAT</p>

<pre><code>rightsubnet=vhost:%priv
also=L2TP-PSK-noNAT
</code></pre>

<p>conn L2TP-PSK-noNAT</p>

<pre><code>authby=secret
pfs=no
auto=add
keyingtries=3
rekey=no
# Apple iOS doesn't send delete notify so we need dead peer detection
# to detect vanishing clients
dpddelay=30
dpdtimeout=120
dpdaction=clear
# Set ikelifetime and keylife to same defaults windows has
ikelifetime=8h
keylife=1h
type=transport
# Replace IP address with your local IP (private, behind NAT IP is okay as well)
left=x.x.x.x
# For updated Windows 2000/XP clients,
# to support old clients as well, use leftprotoport=17/%any
leftprotoport=17/1701
right=%any
rightprotoport=17/%any
#force all to be nat'ed. because of iOS
forceencaps=yes
</code></pre>

<p><code>
- 拷贝下面内容到 `/etc/ipsec.secrets`，
并把其中的`x.x.x.x`替换为你服务器的ip
</code>
x.x.x.x   %any:  PSK "somegoodpassword"
<code>
- 开启ipsec服务
</code>bash
/etc/init.d/ipsec start
<code>
- 执行下面脚本
</code>bash
for each in /proc/sys/net/ipv4/conf/<em>
do
echo 0 > $each/accept_redirects
echo 0 > $each/send_redirects
done
<code>
- 验证ipsec服务
</code>bash
sudo ipsec verify
<code>
不能出现任何错误
</code>
Checking your system to see if IPsec got installed and started correctly:
Version check and ipsec on-path                                 [OK]
Linux Openswan U2.6.28/K2.6.32-32-generic-pae (netkey)
Checking for IPsec support in kernel                            [OK]
NETKEY detected, testing for disabled ICMP send_redirects       [OK]
NETKEY detected, testing for disabled ICMP accept_redirects     [OK]
Checking that pluto is running                                  [OK]
Pluto listening for IKE on udp 500                              [OK]
Pluto listening for NAT-T on udp 4500                           [OK]
Checking for 'ip' command                                       [OK]
Checking for 'iptables' command                                 [OK]
Opportunistic Encryption Support                                [DISABLED]
<code>
- 创建`/etc/init.d/ipsec.vpn`的启动脚本
</code>bash
case "$1" in
  start)
echo "Starting my Ipsec VPN"
iptables  -t nat   -A POSTROUTING -o eth0 -s 10.152.2.0/24 -j MASQUERADE
echo 1 > /proc/sys/net/ipv4/ip_forward
for each in /proc/sys/net/ipv4/conf/</em>
do</p>

<pre><code>echo 0 &gt; $each/accept_redirects
echo 0 &gt; $each/send_redirects
</code></pre>

<p>done
/etc/init.d/ipsec start
/etc/init.d/xl2tpd start
;;
stop)
echo "Stopping my Ipsec VPN"
iptables --table nat --flush
echo 0 > /proc/sys/net/ipv4/ip_forward
/etc/init.d/ipsec stop
/etc/init.d/xl2tpd stop
;;
restart)
echo "Restarting my Ipsec VPN"
iptables  -t nat   -A POSTROUTING -o eth0 -s 10.152.2.0/24 -j MASQUERADE
echo 1 > /proc/sys/net/ipv4/ip_forward
for each in /proc/sys/net/ipv4/conf/*
do</p>

<pre><code>echo 0 &gt; $each/accept_redirects
echo 0 &gt; $each/send_redirects
</code></pre>

<p>done
/etc/init.d/ipsec restart
/etc/init.d/xl2tpd restart</p>

<p>;;
  *)
 echo "Usage: /etc/init.d/ipsec.vpn  {start|stop|restart}"
 exit 1
  ;;
esac
<code>
开启执行权限
</code>bash
sudo chmod +x /etc/init.d/ipsec.vpn
<code>
关闭默认的ipsec服务
</code>bash
sudo update-rc.d -f ipsec remove
<code>
添加刚刚创建的服务
</code>bash
sudo update-rc.d ipsec.vpn defaults
```</p>

<h3>L2TP</h3>

<ul>
<li>拷贝下面内容到<code>/etc/xl2tpd/xl2tpd.conf</code>
```
[global]
ipsec saref = no</li>
</ul>


<p>[lns default]
ip range = 10.152.2.2-10.152.2.254
local ip = 10.152.2.1
require chap = yes
refuse pap = yes
require authentication = yes
ppp debug = yes
pppoptfile = /etc/ppp/options.xl2tpd
length bit = yes
<code>
- 在`/etc/xl2tpd/l2tp-secrets`中创建验证字符串
</code>
* * exampleforchallengestring
<code>
- 拷贝下面内容到`/etc/ppp/options.xl2tpd`
</code>
refuse-mschap-v2
refuse-mschap
ms-dns 8.8.8.8
ms-dns 8.8.4.4
asyncmap 0
auth
crtscts
idle 1800
mtu 1200
mru 1200
lock
hide-password
local</p>

<h1>debug</h1>

<p>name l2tpd
proxyarp
lcp-echo-interval 30
lcp-echo-failure 4
```</p>

<h3>添加用户</h3>

<p>－ 编辑文件<code>/etc/ppp/chap-secrets</code>这里和pptp是同一个文件
<code>
user1 l2tpd chooseagoodpassword *
user2 * chooseagoodpassword *
</code></p>

<h3>开启转发，配置过pptp则可跳过</h3>

<p>－ 编辑文件<code>/etc/sysctl.conf</code>
<code>
net.ipv4.ip_forward=1
</code>
执行
<code>
sysctl -p
</code></p>

<h3>开启服务</h3>

<p><code>bash
sudo /etc/init.d/ipsec.vpn restart
</code></p>

<h3>开启防火墙端口，如果使用防火墙</h3>

<p><code>
L2TP
———————————
UDP:500    (isakmp)
UDP:4500   (nat-t)
UDP:1701   (l2tp)
</code></p>

<h3>Mac连接</h3>

<ul>
<li>打开network preferences创建l2tp类型的vpn，填入服务器ip，用户名</li>
<li>验证里面password填上面设置的somegoodpassword</li>
<li>shared secret 填 exampleforchallengestring</li>
<li>iOS设备同理

<h1>Winter is coming</h1>

<p>来源:
<a href="https://help.ubuntu.com/community/L2TPServer">L2TPServer</a>,
<a href="http://www.xshell.net/networks/339.html">VPN端口号：PPTP、L2TP</a></p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shadowsocks sock5 代理配置－服务端篇]]></title>
    <link href="http://blog.xd547.com/blog/2014/03/28/setup-a-shadowsocks-sock5-proxy/"/>
    <updated>2014-03-28T15:41:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2014/03/28/setup-a-shadowsocks-sock5-proxy</id>
    <content type="html"><![CDATA[<p>0.废话不说，直接上，哦不是，直接用ssh连上服务器  <br/>
1.检查python的版本，需要2.6或者2.7，3.0以上没有测试过
```bash
python --version</p>

<h1>Python 2.7.3</h1>

<p><code>
2.安装所需要的python库以及pip
</code>bash</p>

<h1>之前可以先 sudo apt-get update</h1>

<p>sudo apt-get install python-gevent python-m2crypto python-pip
<code>
3.安装shadowsocks
</code>bash
sudo pip install shadowsocks
```</p>

<p>4.用你喜欢的编辑器创建config.json</p>

<p>```javascript
{</p>

<pre><code>"server":"你的服务器ip", // 你的服务器ip
"server_port":8388,    // shadowsocks监听的端口，建议修改，如果服务器有防火墙记得打洞
"local_port":1080,     // 服务端不重要
"password":"barfoo!",  // 加密的密码
"timeout":600,
"method":"aes-256-cfb" // 加密方式，前面已经安装了python-m2crypto，这里可以选择这个
</code></pre>

<p>}
<code>
无注释版
</code>javascript
{</p>

<pre><code>"server":"你的服务器ip",
"server_port":8388,
"local_port":1080,
"password":"barfoo!",
"timeout":600,
"method":"aes-256-cfb"
</code></pre>

<p>}
<code>
5.开个screen，开启shadowsocks
</code>bash
screen -S s</p>

<h1>注意有3个s</h1>

<p>ssserver -c config.json
```</p>
]]></content>
  </entry>
  
</feed>
