<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[RainySummer's New Blog]]></title>
  <link href="http://blog.xd547.com/atom.xml" rel="self"/>
  <link href="http://blog.xd547.com/"/>
  <updated>2014-03-28T16:07:58+08:00</updated>
  <id>http://blog.xd547.com/</id>
  <author>
    <name><![CDATA[RainySummer]]></name>
    <email><![CDATA[RainySummer@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Shadowsocks sock5 代理配置－服务端篇]]></title>
    <link href="http://blog.xd547.com/blog/2014/03/28/setup-a-shadowsocks-sock5-proxy/"/>
    <updated>2014-03-28T15:41:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2014/03/28/setup-a-shadowsocks-sock5-proxy</id>
    <content type="html"><![CDATA[<p>0.废话不说，直接上，哦不是，直接用ssh连上服务器
1.检查python的版本，需要2.6或者2.7，3.0以上没有测试过</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>python --version
</span><span class='line'><span class="c"># Python 2.7.3</span>
</span></code></pre></td></tr></table></div></figure>


<p>2.安装所需要的python库以及pip</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># 之前可以先 sudo apt-get update</span>
</span><span class='line'>sudo apt-get install python-gevent python-m2crypto python-pip
</span></code></pre></td></tr></table></div></figure>


<p>3.安装shadowsocks</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo pip install shadowsocks
</span></code></pre></td></tr></table></div></figure>


<p>4.用你喜欢的编辑器创建config.json</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;server&quot;</span><span class="o">:</span><span class="s2">&quot;你的服务器ip&quot;</span><span class="p">,</span> <span class="c1">// 你的服务器ip</span>
</span><span class='line'>    <span class="s2">&quot;server_port&quot;</span><span class="o">:</span><span class="mi">8388</span><span class="p">,</span>    <span class="c1">// shadowsocks监听的端口，建议修改，如果服务器有防火墙记得打洞</span>
</span><span class='line'>    <span class="s2">&quot;local_port&quot;</span><span class="o">:</span><span class="mi">1080</span><span class="p">,</span>     <span class="c1">// 服务端不重要</span>
</span><span class='line'>    <span class="s2">&quot;password&quot;</span><span class="o">:</span><span class="s2">&quot;barfoo!&quot;</span><span class="p">,</span>  <span class="c1">// 加密的密码</span>
</span><span class='line'>    <span class="s2">&quot;timeout&quot;</span><span class="o">:</span><span class="mi">600</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;method&quot;</span><span class="o">:</span><span class="s2">&quot;aes-256-cfb&quot;</span> <span class="c1">// 加密方式，前面已经安装了python-m2crypto，这里可以选择这个</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>无注释版</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;server&quot;</span><span class="o">:</span><span class="s2">&quot;你的服务器ip&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;server_port&quot;</span><span class="o">:</span><span class="mi">8388</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;local_port&quot;</span><span class="o">:</span><span class="mi">1080</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;password&quot;</span><span class="o">:</span><span class="s2">&quot;barfoo!&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;timeout&quot;</span><span class="o">:</span><span class="mi">600</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;method&quot;</span><span class="o">:</span><span class="s2">&quot;aes-256-cfb&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>5.开个screen，开启shadowsocks</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>screen -S s
</span><span class='line'><span class="c"># 注意有3个s</span>
</span><span class='line'>ssserver -c config.json
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby 小技巧]]></title>
    <link href="http://blog.xd547.com/blog/2014/02/27/ruby-tricks/"/>
    <updated>2014-02-27T22:54:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2014/02/27/ruby-tricks</id>
    <content type="html"><![CDATA[<p>Iterrator 有时需要index，那就加入with_index，如下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">f</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="s2">&quot;testfile&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">f</span><span class="o">.</span><span class="n">each</span><span class="o">.</span><span class="n">with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">line</span><span class="p">,</span> <span class="n">index</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Line </span><span class="si">#{</span><span class="n">index</span><span class="si">}</span><span class="s2"> is: </span><span class="si">#{</span><span class="n">line</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>在Rails的migration中添加字段（add_column）option的limit说设置的值
是添加字段类型的默认值，limit就不会出现在db/schema.rb中的相应位置。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为什么我痛恨Mac]]></title>
    <link href="http://blog.xd547.com/blog/2014/02/25/why-i-hate-mac/"/>
    <updated>2014-02-25T16:34:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2014/02/25/why-i-hate-mac</id>
    <content type="html"><![CDATA[<p>我爱Mac，但Mac满满的都是槽点
1. 我的是rMBP，USB接口少的可怜，才有两个，外接一个机械键盘，外接一个鼠标就没有了（不要告诉用蓝牙的，我也知道） <br/>
2. 全局输入法切换，写代码的时候和朋友聊天，回到写代码的时候太难受，何况我用的还是vim（是我不懂Mac啊，改个设置就可以了啊） <br/>
3. 如果光标在输入框内捏合进入Launchpad是还是输入的光标而不是指针，会看不见 <br/>
4. <strong>玩游戏不过瘾啊不过瘾</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我喜欢Mac的几个原因]]></title>
    <link href="http://blog.xd547.com/blog/2014/02/25/why-i-love-mac/"/>
    <updated>2014-02-25T15:58:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2014/02/25/why-i-love-mac</id>
    <content type="html"><![CDATA[<p>用了Mac还没有几天，就彻底的爱上Mac了  <br/>
1. 电源线，非常柔软，不会硬邦邦的戳到改变Mac和插板的位置 <br/>
2. 不用重启，就算重启，重启以后可以自动回到重启之前的状态 <br/>
3. 不用关机，开机，盖上盖子就好，这个直接影响了我的习惯，原来用电脑的时候要先开机，然后去做别的事情
很久很久之后才能使用，关机也是。   <br/>
4. TrackPad 我从来没有想过触摸板会这么好用，好用到可以完全不用鼠标了  <br/>
5. 超级快，安装个Ubuntu的虚拟机只要5分钟windows只要6分钟 <br/>
6. 终端和系统配合的特别好，这对于码农来说实在是太好了      <br/>
7. 安静，平时使用的时候几乎听不到任何风扇的声音，话说我的大Y随便用用就好比的轰炸机飞过 <br/>
8. 和iOS设备配合的特别好，iTunes似乎也没有那么难用了 <br/>
9. 截图功能非常不错 <br/>
10. 背光键盘，这让我在晚上能够关着灯使用Mac <br/>
11. 有超级好用的文档工具Dash  <br/>
12. command+, 几乎是每个软件Preferences的快捷键 <br/>
13. 不插电的情况下Safari中的插件不会自动运行。 <br/>
14. 通知中心和免打扰，工作时不会受到打扰。 <br/>
15. 字体，让我义无反顾。 <br/>
16. 下载的zip可以自动解压。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用through关联时访问关系的属性]]></title>
    <link href="http://blog.xd547.com/blog/2013/12/26/get-association-attributes-using-through/"/>
    <updated>2013-12-26T21:49:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2013/12/26/get-association-attributes-using-through</id>
    <content type="html"><![CDATA[<p>0.有下面三个 model 关联，使用 through 来简化对 Ownership 的访问</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="c1"># association</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:ownerships</span><span class="p">,</span> <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:shops</span><span class="p">,</span> <span class="ss">through</span><span class="p">:</span> <span class="ss">:ownerships</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Ownership</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:shop</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Shop</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="c1"># association</span>
</span><span class='line'>  <span class="n">has_one</span>  <span class="ss">:ownership</span><span class="p">,</span> <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'>  <span class="n">has_one</span>  <span class="ss">:user</span><span class="p">,</span> <span class="ss">through</span><span class="p">:</span> <span class="ss">:ownership</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>1.此时无法在Shop中在 after_create 来访问 ownership 的 user_id 属性，因为这时 owership 还未创建。当事务 commit 以后 owership 被创建，同时拥有 user_id 属性。这时就可以获得 user_id 从而进行相关操作</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Shop</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">after_commit</span> <span class="ss">:get_attr_after_destroy</span><span class="p">,</span> <span class="ss">on</span><span class="p">:</span> <span class="o">[</span><span class="ss">:destroy</span><span class="o">]</span>
</span><span class='line'>  <span class="n">after_commit</span> <span class="ss">:get_attr_after_create</span><span class="p">,</span>  <span class="ss">on</span><span class="p">:</span> <span class="o">[</span><span class="ss">:create</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">after_create</span> <span class="ss">:get_attr_in_after_create</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># association</span>
</span><span class='line'>  <span class="n">has_one</span>  <span class="ss">:ownership</span><span class="p">,</span> <span class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
</span><span class='line'>  <span class="n">has_one</span>  <span class="ss">:user</span><span class="p">,</span> <span class="ss">through</span><span class="p">:</span> <span class="ss">:ownership</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get_attr_after_destroy</span>
</span><span class='line'>      <span class="n">user_id</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">ownership</span><span class="o">.</span><span class="n">user_id</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get_attr_after_create</span>
</span><span class='line'>      <span class="n">user_id</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">ownership</span><span class="o">.</span><span class="n">user_id</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">get_attr_in_after_create</span>
</span><span class='line'>      <span class="c1"># self.ownership is nil</span>
</span><span class='line'>      <span class="c1"># NoMethodError: undefined method `user_id&#39; for nil:NilClass</span>
</span><span class='line'>      <span class="n">user_id</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">ownership</span><span class="o">.</span><span class="n">user_id</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails 小提示]]></title>
    <link href="http://blog.xd547.com/blog/2013/12/26/rails-tips/"/>
    <updated>2013-12-26T17:23:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2013/12/26/rails-tips</id>
    <content type="html"><![CDATA[<ul>
<li>重写activerecord 的 method_missing 不是一个好的主意 #rails</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在ubuntu上安装较新版本的nodejs]]></title>
    <link href="http://blog.xd547.com/blog/2013/12/18/install-recent-version-nodejs-on-ubuntu/"/>
    <updated>2013-12-18T14:21:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2013/12/18/install-recent-version-nodejs-on-ubuntu</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install -y python-software-properties python g++ make
</span><span class='line'>sudo add-apt-repository -y ppa:chris-lea/node.js
</span><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install nodejs
</span></code></pre></td></tr></table></div></figure>


<p>因为用到 <code>add-apt-repository</code> 可能需要安装 <code>software-properties-common</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install software-properties-common
</span></code></pre></td></tr></table></div></figure>


<p>来源：<a href="https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager#ubuntu-mint-elementary-os">Installing Node.js via package manager</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在Ubuntu上使用nginx官方源安装nginx]]></title>
    <link href="http://blog.xd547.com/blog/2013/12/17/use-offical-nginx-repo-install-nginx-on-ubuntu/"/>
    <updated>2013-12-17T21:33:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2013/12/17/use-offical-nginx-repo-install-nginx-on-ubuntu</id>
    <content type="html"><![CDATA[<p>0.添加key</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys ABF5BD827BD9BF62
</span></code></pre></td></tr></table></div></figure>


<p>1.添加到nginx官方源到 <code>/etc/apt/sources.list</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>deb http://nginx.org/packages/ubuntu/ precise nginx
</span></code></pre></td></tr></table></div></figure>


<p>2.如果原来安装过nginx，备份相关配置文件后删除nginx及其相关组件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get purge nginx*
</span></code></pre></td></tr></table></div></figure>


<p>3.安装nginx</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install nginx
</span></code></pre></td></tr></table></div></figure>


<p>4.安装成功后可以用-v查看ningx版本</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>nginx -v
</span><span class='line'><span class="c">#nginx version: nginx/1.4.4</span>
</span></code></pre></td></tr></table></div></figure>


<p>来源：<a href="http://ruby-journal.com/how-to-setup-rails-app-with-puma-and-nginx/">How to Setup Rails App With Puma and NGINX</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修改git push 后的commit message]]></title>
    <link href="http://blog.xd547.com/blog/2013/12/17/modify-git-commit-msg-after-push/"/>
    <updated>2013-12-17T16:17:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2013/12/17/modify-git-commit-msg-after-push</id>
    <content type="html"><![CDATA[<p>背景：手快把一个有拼写错误的commit message给push了  <br/>
如何：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git commit --amend <span class="c">#修改commit message</span>
</span><span class='line'>git push -f <span class="c">#强制提交，如果不强制提交会被拒绝</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修复Firefox下用javascript创建的表单元素无法正确提交的bug]]></title>
    <link href="http://blog.xd547.com/blog/2013/12/01/fix-javascript-created-form-submit-bug-in-firefox/"/>
    <updated>2013-12-01T12:53:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2013/12/01/fix-javascript-created-form-submit-bug-in-firefox</id>
    <content type="html"><![CDATA[<p>项目<a href="https://github.com/xd547/stacktxt">StackTXT</a>
描述： <br/>
Firefox下 document.createElement 创建的表单元素无法正确提交(submit)</p>

<p>解决：
将创建的表单元素加入到 document.body 提交完毕后删除</p>

<!-- more -->


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='coffee-script'><span class='line'><span class="nv">share = </span><span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nv">shareForm = </span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s">&quot;form&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">shareForm</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s">&quot;method&quot;</span><span class="p">,</span> <span class="s">&quot;post&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">shareForm</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s">&quot;action&quot;</span><span class="p">,</span> <span class="s">&quot;/&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">shareForm</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">share_content</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># add shareForm to DOM</span>
</span><span class='line'>  <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">shareForm</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">shareForm</span><span class="p">.</span><span class="nx">submit</span><span class="p">()</span>
</span><span class='line'>  <span class="c1"># remove shaerForm from DOM</span>
</span><span class='line'>  <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">shareForm</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails 中跨控制器的缓存控制（一）]]></title>
    <link href="http://blog.xd547.com/blog/2013/06/22/rails-cross-controller-cache-control-1/"/>
    <updated>2013-06-22T14:55:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2013/06/22/rails-cross-controller-cache-control-1</id>
    <content type="html"><![CDATA[<p>本篇介绍的方法是一个模型（Model）的多个控制器（Controller）中如何使用 Sweeper <br/>
使用场景：需要后台管理的应用程序中，后台更新信息后，自动清除前台页面的缓存 <br/>
下面就是具体过程</p>

<!-- more -->


<p>0.在 rails 的 config/environments/* 相应的环境配置文件中加入下面代码，这个缓存配置默认在 development test 环境是关闭的，在 production 环境中是开启的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">action_controller</span><span class="o">.</span><span class="n">perform_caching</span> <span class="o">=</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<p>1.假设我们有一个名为 Post 的模型 <br/>
2.在 app 目录下新建 sweepers 目录，用于存放 sweeper 文件，在该目录下添加 post_sweeper.rb 文件，添加了类常量 CACHE_PATH</p>

<figure class='code'><figcaption><span>post_sweeper.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">PostSweeper</span> <span class="o">&lt;</span> <span class="ss">ActionController</span><span class="p">:</span><span class="ss">:Caching</span><span class="o">::</span><span class="no">Sweeper</span>
</span><span class='line'>  <span class="no">CACHE_PATH</span> <span class="o">=</span> <span class="s2">&quot;posts_index&quot;</span> <span class="c1"># 跨控制器的关键</span>
</span><span class='line'>  <span class="n">observe</span> <span class="no">Post</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">after_create</span><span class="p">(</span><span class="n">post</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expire_cache_for</span><span class="p">(</span><span class="n">post</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">after_update</span><span class="p">(</span><span class="n">post</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expire_cache_for</span><span class="p">(</span><span class="n">post</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">after_destroy</span><span class="p">(</span><span class="n">post</span><span class="p">)</span>
</span><span class='line'>    <span class="n">expire_cache_for</span><span class="p">(</span><span class="n">post</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">expire_cache_for</span><span class="p">(</span><span class="n">post</span><span class="p">)</span>
</span><span class='line'>      <span class="n">expire_fragment</span><span class="p">(</span><span class="ss">PostSweeper</span><span class="p">:</span><span class="ss">:CACHE_PATH</span><span class="p">)</span> <span class="c1"># 清空命名的 expire_fragment</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.在需要缓存的控制器（Post的前台）中加入如下代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">PostsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="n">caches_action</span> <span class="ss">:index</span><span class="p">,</span> <span class="ss">:cache_path</span> <span class="o">=&gt;</span> <span class="ss">PostSweeper</span><span class="p">:</span><span class="ss">:CACHE_PATH</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="c1"># ...</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># 其他 action ...</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>4.在需要控制缓存的控制器（Post的后台）中加入如下代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Admin</span><span class="o">::</span><span class="no">PostsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="n">cache_sweeper</span> <span class="ss">:post_sweeper</span> <span class="c1"># 指定 sweeper </span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># index show new create edit update destroy actions ...</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>5.这样就可以在后台更新 Post 的时候通过 sweeper 来更新前台页面的缓存<br/>
参考 <a href="http://guides.rubyonrails.org/caching_with_rails.html">Caching with Rails: An overview</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails 中灵活的应用程序设置（二）]]></title>
    <link href="http://blog.xd547.com/blog/2013/04/29/flexible-setting-in-rails-app-2/"/>
    <updated>2013-04-29T16:03:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2013/04/29/flexible-setting-in-rails-app-2</id>
    <content type="html"><![CDATA[<p>在上一篇<a href="http://blog.xd547.com/blog/2013/04/15/flexible-setting-in-rails-app-1/">Ruby on Rails 中灵活的应用程序设置（一）</a>中讲到如何创建一个 AppSettings 的 model 这篇要讲的是在 controller 和 view 中使用 AppSetting<br/>
0.创建 AppSetting Controller</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rails g controller AppSetting index
</span></code></pre></td></tr></table></div></figure>


<p>1.新建一个 form partials</p>

<!-- more -->


<figure class='code'><figcaption><span>_form.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="c">&lt;!-- 实际运用时里面的中文可以用 I18n处理 --&gt;</span>
</span><span class='line'><span class="nt">&lt;table&gt;</span>
</span><span class='line'>    <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>      <span class="nt">&lt;th&gt;</span>属性<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>      <span class="nt">&lt;th&gt;</span>值<span class="nt">&lt;/th&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>  <span class="err">&lt;</span>%= form_tag(app_setting_path) do -%&gt;
</span><span class='line'>    <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>      <span class="nt">&lt;td&gt;</span>
</span><span class='line'>        <span class="err">&lt;</span>%= label_tag :site_name, &quot;站点名称&quot;%&gt;
</span><span class='line'>      <span class="nt">&lt;/td&gt;</span>
</span><span class='line'>      <span class="nt">&lt;td&gt;</span>
</span><span class='line'>        <span class="err">&lt;</span>%= text_field_tag :site_name, AppSetting[&quot;site_name&quot;] %&gt;
</span><span class='line'>      <span class="nt">&lt;/td&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>      <span class="nt">&lt;td&gt;</span>
</span><span class='line'>        <span class="err">&lt;</span>%= label_tag :site_url, &quot;站点链接&quot; %&gt;
</span><span class='line'>      <span class="nt">&lt;/td&gt;</span>
</span><span class='line'>      <span class="nt">&lt;td&gt;</span>
</span><span class='line'>        <span class="err">&lt;</span>%= text_field_tag :site_url, AppSetting[&quot;site_url&quot;] %&gt;
</span><span class='line'>      <span class="nt">&lt;/td&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;tr&gt;</span>
</span><span class='line'>      <span class="nt">&lt;td&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/td&gt;</span>
</span><span class='line'>      <span class="nt">&lt;td&gt;</span>
</span><span class='line'>        <span class="err">&lt;</span>%= submit_tag &quot;保存&quot; %&gt;
</span><span class='line'>      <span class="nt">&lt;/td&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/tr&gt;</span>
</span><span class='line'>  <span class="err">&lt;</span>% end %&gt;
</span><span class='line'><span class="nt">&lt;/table&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>2.下面直接给出 AppSettingController 文件</p>

<figure class='code'><figcaption><span>app_setting_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AppSettingController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="nb">method</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">method</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># 处理 POST</span>
</span><span class='line'>    <span class="k">if</span> <span class="nb">method</span> <span class="o">==</span> <span class="s2">&quot;POST&quot;</span>
</span><span class='line'>      <span class="c1"># 验证字段 具体看下面的 validate_setting_length 方法</span>
</span><span class='line'>      <span class="n">validation</span> <span class="o">=</span> <span class="n">validate_setting_length</span><span class="p">(</span><span class="n">params</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">validation</span><span class="o">.</span><span class="n">length</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>        <span class="c1"># 如果验证通过 保存每一个字段</span>
</span><span class='line'>        <span class="n">setting_fields</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">v</span><span class="o">|</span>
</span><span class='line'>          <span class="no">AppSetting</span><span class="o">[</span><span class="n">v</span><span class="o">]</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="n">v</span><span class="o">]</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>        <span class="n">msg</span> <span class="o">=</span> <span class="no">I18n</span><span class="o">.</span><span class="n">t</span><span class="p">(</span><span class="s2">&quot;app_setting.updated_msg&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">]</span> <span class="o">=</span> <span class="n">msg</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="n">msg</span> <span class="o">=</span> <span class="no">I18n</span><span class="o">.</span><span class="n">t</span><span class="p">(</span><span class="s2">&quot;app_setting.error_title&quot;</span><span class="p">,</span> <span class="ss">:error_count</span> <span class="o">=&gt;</span> <span class="n">validation</span><span class="o">.</span><span class="n">length</span><span class="p">)</span>
</span><span class='line'>        <span class="n">validation</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">value</span><span class="o">|</span>
</span><span class='line'>          <span class="n">msg</span> <span class="o">+=</span> <span class="no">I18n</span><span class="o">.</span><span class="n">t</span><span class="p">(</span><span class="s2">&quot;app_setting.error_msg&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="ss">:field</span> <span class="o">=&gt;</span> <span class="no">I18n</span><span class="o">.</span><span class="n">t</span><span class="p">(</span><span class="s2">&quot;app_setting.</span><span class="si">#{</span><span class="n">value</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">))</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>        <span class="n">flash</span><span class="o">[</span><span class="ss">:error</span><span class="o">]</span> <span class="o">=</span> <span class="n">msg</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span class="n">app_setting_url</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>    <span class="c1"># 验证字段 这里只验证每个字段的最大长度，需要其他的自己添加</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">validate_setting_length</span><span class="p">(</span><span class="n">params</span><span class="p">)</span>
</span><span class='line'>      <span class="n">max_length</span> <span class="o">=</span> <span class="mi">255</span>
</span><span class='line'>      <span class="n">fields</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>      <span class="n">setting_fields</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">v</span><span class="o">|</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">params</span><span class="o">[</span><span class="n">v</span><span class="o">].</span><span class="n">length</span> <span class="o">&gt;</span> <span class="n">max_length</span>
</span><span class='line'>          <span class="n">fields</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">fields</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">setting_fields</span>
</span><span class='line'>      <span class="c1"># 把需要保存的设置项放到这个 array 里面</span>
</span><span class='line'>      <span class="o">[</span><span class="s2">&quot;site_name&quot;</span><span class="p">,</span> <span class="s2">&quot;site_url&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>分析：在 AppSettings 保存时 每设置一个字段都会保存一次，可以添加所有字段一次处理完以后再保存的代码， 而 AppSetting 在读取时，第一次是往数据库中读取，再次读取时则从 cache（由 rails 控制） 里面读取，所以性能尚可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails 中灵活的应用程序设置（一）]]></title>
    <link href="http://blog.xd547.com/blog/2013/04/15/flexible-setting-in-rails-app-1/"/>
    <updated>2013-04-15T19:23:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2013/04/15/flexible-setting-in-rails-app-1</id>
    <content type="html"><![CDATA[<p>本文介绍的方法以 ActiveRecord 为基础将应用程序的设置存储到数据库中<br/>
为了方便扩展，设置将以 json 的格式保存到数据库<br/>
同时设置是全局的，只需要一条数据记录就可以满足需求，于是用到了 singleton pattern<br/>
<strong>注意</strong>这种处理方法可能会有性能问题<br/>
下面进入正题 <br/>
0.创建 AppSetting model</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rails g model AppSetting
</span></code></pre></td></tr></table></div></figure>


<p>1.修改 AppSetting 的 migration</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">create_table</span> <span class="ss">:app_settings</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span class="ss">:singleton_guard</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">text</span> <span class="ss">:value</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">add_index</span><span class="p">(</span><span class="ss">:app_settings</span><span class="p">,</span> <span class="ss">:singleton_guard</span><span class="p">,</span> <span class="ss">:unique</span> <span class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<p>2.下面直接贴整个 AppSetting model 的代码</p>

<figure class='code'><figcaption><span>app_setting.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AppSetting</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:value</span><span class="p">,</span> <span class="ss">:list</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:list</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">after_initialize</span> <span class="ss">:init</span>
</span><span class='line'>  <span class="n">before_save</span> <span class="ss">:covert_format</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">validates_inclusion_of</span> <span class="ss">:singleton_guard</span><span class="p">,</span> <span class="ss">:in</span> <span class="o">=&gt;</span> <span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">covert_format</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">value</span> <span class="o">=</span> <span class="nb">self</span><span class="o">.</span><span class="n">list</span><span class="o">.</span><span class="n">to_json</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">load_list</span>
</span><span class='line'>    <span class="k">begin</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">list</span> <span class="o">=</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="nb">self</span><span class="o">.</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="k">rescue</span> <span class="ss">JSON</span><span class="p">:</span><span class="ss">:ParserError</span> <span class="o">=&gt;</span> <span class="n">msg</span>
</span><span class='line'>      <span class="n">logger</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="s2">&quot;AppSetting: Can not load list!&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">list</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">[]</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">list</span><span class="o">[</span><span class="n">key</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">[]=</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">list</span><span class="o">[</span><span class="n">key</span><span class="o">]</span> <span class="o">=</span> <span class="n">value</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">init</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">value</span> <span class="o">||=</span> <span class="s2">&quot;{}&quot;</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">list</span> <span class="o">||=</span> <span class="n">load_list</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">singleton_guard</span> <span class="o">||=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># class method</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># singleton</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">AppSetting</span><span class="o">.</span><span class="nf">instance</span>
</span><span class='line'>    <span class="k">begin</span>
</span><span class='line'>      <span class="n">find</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="k">rescue</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:RecordNotFound</span>
</span><span class='line'>      <span class="n">row</span> <span class="o">=</span> <span class="no">AppSetting</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>      <span class="n">row</span><span class="o">.</span><span class="n">singleton_guard</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>      <span class="n">row</span><span class="o">.</span><span class="n">save!</span>
</span><span class='line'>      <span class="n">row</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">AppSetting</span><span class="o">.</span><span class="nf">[]</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>    <span class="no">AppSetting</span><span class="o">.</span><span class="n">instance</span><span class="o">[</span><span class="n">key</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">AppSetting</span><span class="o">.</span><span class="nf">[]=</span><span class="p">(</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="no">AppSetting</span><span class="o">.</span><span class="n">instance</span><span class="o">[</span><span class="n">key</span><span class="o">]</span> <span class="o">=</span> <span class="n">value</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.为了方便 AppSetting 的使用，重载了操作符 &#8216;[]&#8217;, &#8216;[]=&#8217;<br/>
4.使用示例</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># set site_name to &quot;example site&quot;. AppSetting will save when set the value</span>
</span><span class='line'><span class="no">AppSetting</span><span class="o">[</span><span class="s2">&quot;site_name&quot;</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;example site&quot;</span>
</span><span class='line'><span class="c1"># get &quot;site_name&quot; and assign it to variable site_name</span>
</span><span class='line'><span class="n">site_name</span> <span class="o">=</span> <span class="no">AppSetting</span><span class="o">[</span><span class="s2">&quot;site_name&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>5.下一篇<a href="http://blog.xd547.com/blog/2013/04/29/flexible-setting-in-rails-app-2/">Ruby on Rails 中灵活的应用程序设置（二）</a>将介绍如何在 Controler 和 view 中 使用 AppSetting<br/>
参考 <a href="http://stackoverflow.com/questions/399447/how-to-implement-a-singleton-model">1</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Rspec 测试的上传模拟]]></title>
    <link href="http://blog.xd547.com/blog/2013/04/12/simulate-upload-in-rspec/"/>
    <updated>2013-04-12T10:13:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2013/04/12/simulate-upload-in-rspec</id>
    <content type="html"><![CDATA[<p>Rspec 是一个 ruby 的测试框架，在进行 Ruby on Rails 开发时通常都会使用这个框架<br/>
本文不讨论如何在 Ruby on Rails 中 配置 Rspec<br/>
0.准备工作</p>

<p>0).在 Ruby on Rails 项目文件夹下的 spec/fixtures 下创建文件夹 files<br/>
1).把测试文件拷贝到该文件夹下面，这里的示例为 &#8220;egg.zip&#8221;, &#8220;egg.jpg&#8221;</p>

<p>1.引入 fixture_file_upload</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="kp">include</span> <span class="ss">ActionDispatch</span><span class="p">:</span><span class="ss">:TestProcess</span>
</span></code></pre></td></tr></table></div></figure>


<p>2.为测试准备上传文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">describe</span> <span class="no">UploadController</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">before</span><span class="p">(</span><span class="ss">:each</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@file</span> <span class="o">=</span> <span class="n">fixture_file_upload</span><span class="p">(</span><span class="s1">&#39;/files/egg.zip&#39;</span><span class="p">,</span> <span class="s1">&#39;application/zip&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@image</span> <span class="o">=</span> <span class="n">fixture_file_upload</span><span class="p">(</span><span class="s1">&#39;/files/egg.jpg&#39;</span><span class="p">,</span> <span class="s1">&#39;image/jpeg&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.在测试中上传文件</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">describe</span> <span class="s2">&quot;upload&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;should upload file&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">post</span> <span class="ss">:upload</span><span class="p">,</span> <span class="ss">:file</span> <span class="o">=&gt;</span> <span class="vi">@file</span>  <span class="c1">#upload action is here</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">redirect_to</span><span class="p">(</span><span class="n">upload_path</span><span class="p">)</span>
</span><span class='line'>    <span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">].</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;upload success&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">should</span> <span class="n">equal</span><span class="p">(</span><span class="kp">true</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;should upload image&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">post</span> <span class="ss">:upload</span><span class="p">,</span> <span class="ss">:file</span> <span class="o">=&gt;</span> <span class="vi">@image</span>  <span class="c1">#upload action is here</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">redirect_to</span><span class="p">(</span><span class="n">upload_path</span><span class="p">)</span>
</span><span class='line'>    <span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">].</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;upload success&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">should</span> <span class="n">equal</span><span class="p">(</span><span class="kp">true</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>4.运行测试</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rspec spec/controllers/upload_controller_spec.rb
</span></code></pre></td></tr></table></div></figure>


<p>5.完整的 spec</p>

<figure class='code'><figcaption><span>upload_controller_spec.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>
</span><span class='line'><span class="kp">include</span> <span class="ss">ActionDispatch</span><span class="p">:</span><span class="ss">:TestProcess</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="no">UploadController</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">before</span><span class="p">(</span><span class="ss">:each</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@file</span> <span class="o">=</span> <span class="n">fixture_file_upload</span><span class="p">(</span><span class="s1">&#39;/files/egg.zip&#39;</span><span class="p">,</span> <span class="s1">&#39;application/zip&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@image</span> <span class="o">=</span> <span class="n">fixture_file_upload</span><span class="p">(</span><span class="s1">&#39;/files/egg.jpg&#39;</span><span class="p">,</span> <span class="s1">&#39;image/jpeg&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">describe</span> <span class="s2">&quot;upload&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;should upload file&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">post</span> <span class="ss">:upload</span><span class="p">,</span> <span class="ss">:file</span> <span class="o">=&gt;</span> <span class="vi">@file</span>  <span class="c1">#upload action is here</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">redirect_to</span><span class="p">(</span><span class="n">upload_path</span><span class="p">)</span>
</span><span class='line'>      <span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">].</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;upload success&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">should</span> <span class="n">equal</span><span class="p">(</span><span class="kp">true</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">it</span> <span class="s2">&quot;should upload image&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">post</span> <span class="ss">:upload</span><span class="p">,</span> <span class="ss">:file</span> <span class="o">=&gt;</span> <span class="vi">@image</span>  <span class="c1">#upload action is here</span>
</span><span class='line'>      <span class="n">expect</span><span class="p">(</span><span class="n">response</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">redirect_to</span><span class="p">(</span><span class="n">upload_path</span><span class="p">)</span>
</span><span class='line'>      <span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">].</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;upload success&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">should</span> <span class="n">equal</span><span class="p">(</span><span class="kp">true</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在 Ubuntu 上安装 Rmagick]]></title>
    <link href="http://blog.xd547.com/blog/2013/04/10/install-rmagick-on-ubuntu/"/>
    <updated>2013-04-10T22:47:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2013/04/10/install-rmagick-on-ubuntu</id>
    <content type="html"><![CDATA[<p>Rmagick 是 ruby 中处理图片的开发库，在 Ruby on Rails 中经常用来处理图片的输出和验证码。 <br/>
下面就是如何在 Ubuntu 上 安装 Rmagick。<br/>
0.安装 ruby 的运行环境，推荐使用 rvm 来管理和使用 ruby。<br/>
1.打开 shell 输入如下命令</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo apt-get install imagemagick libmagickwand-dev
</span></code></pre></td></tr></table></div></figure>


<p>2.继续输入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem install rmagick
</span></code></pre></td></tr></table></div></figure>


<p>3.验证安装，打开 irb 输入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;RMagick&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>返回 true 就说安装成功</p>

<p>如果在 Ruby on Rails 中使用需要在项目的 Gemfile 中加入</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>gem <span class="s2">&quot;rmagick&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure>


<p>至此 Rmagic 就安装完毕了 <br/>
另附 Rmagick 的<a href="http://studio.imagemagick.org/RMagick/doc/">文档</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello world]]></title>
    <link href="http://blog.xd547.com/blog/2013/04/10/hello-world/"/>
    <updated>2013-04-10T11:55:00+08:00</updated>
    <id>http://blog.xd547.com/blog/2013/04/10/hello-world</id>
    <content type="html"><![CDATA[<p>用 Octopress 的 Hello World</p>

<figure class='code'><figcaption><span>Hello World</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Hello World&quot;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
